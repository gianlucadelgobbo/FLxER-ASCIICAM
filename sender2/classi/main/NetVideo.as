package classi.main{	import flash.display.MovieClip;	import flash.display.Sprite;	import flash.net.NetConnection;	import flash.net.NetStream;	import flash.net.ObjectEncoding;	import flash.events.Event;	import flash.events.NetStatusEvent;	import flash.events.SecurityErrorEvent;	import flash.media.Video;	import flash.media.Camera;	import flash.net.*;	import fl.transitions.easing.*;	import flash.display.Sprite;	public class NetVideo extends Sprite {		public var video:Video;		public var connection:NetConnection;		public var stream:NetStream;		public var camera:Camera;		public var nomeCl;		public var nomeStream;		public var so;		public function NetVideo(varr:String, camN ) {			camNum = camN			nomeCl=varr;						NetConnection.defaultObjectEncoding=ObjectEncoding.AMF0;			connection=new NetConnection  ;			connection.addEventListener(NetStatusEvent.NET_STATUS,vaiStreem);						newCam(null,nomeCl)			//camera=Camera.getCamera(camNum);												connection.connect("rtmp://217.72.102.104/flxerMultiple");												/*so = SharedObject.getRemote("so", connection.uri, false);			so.connect(connection);*/		}						public function newCam(camN, nomeCl ) {			camera=Camera.getCamera(camN);			if(camN!=null){				trace("eccomi!!!!! " + nomeCl)				connectStream(nomeCl);				}			}								private function vaiStreem(event:NetStatusEvent):void {			//trace(event.info.code);			switch (event.info.code) {				case "NetConnection.Connect.Success" :					trace("Stream partito: ");					connectStream("def");					break;				case "NetStream.Play.StreamNotFound" :					trace("Stream not found: ");					break;			}		}		private function connectStream(nomeStream):void {			var stream:NetStream=new NetStream(connection);			stream.addEventListener(NetStatusEvent.NET_STATUS,vaiStreem);			//stream.client=new CustomClient  ;			stream.attachCamera(camera);			public var camera:Camera;			camera=Camera.getCamera(camN);			video=new Video  ;			video.attachCamera(camera);			//video.attachNetStream(stream);			addChild(video);						stream.publish(nomeStream,"live");		}	}}class CustomClient {	public function onMetaData(info:Object):void {		trace("metadata: duration=" + info.duration + " width=" + info.width + " height=" + info.height + " framerate=" + info.framerate);	}	public function onCuePoint(info:Object):void {		trace("cuepoint: time=" + info.time + " name=" + info.name + " type=" + info.type);	}}