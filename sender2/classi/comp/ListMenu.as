package classi.comp{	import flash.display.Sprite;	import flash.utils.*;	import flash.geom.Point;	import flash.events.MouseEvent;	import classi.main.Rett;	import classi.comp.ListBox;	public class ListMenu extends Sprite {		var w:Number;		var h:Number;		var txt:String;		var myXml;		var fnz:Function;		var n:Number;		////		var c:Number;		var conta:Number;		var toppa;		var lab:Sprite;		var labs:Sprite;		var point:Object;		var alt:String;		public function ListMenu(xx:Number,yy:Number,ww,hh,t:String,f:Function,alt, xml, nn) {			x = xx;			y = yy;			w=ww;			h=hh;			myXml = xml			fnz = f;			lab = new ButtonTxt(0, 0, w, h, t, apri, null, alt);			this.addChild(lab)			//_root.mdf.drawer(this.lab, "s", w-3, h-3, 2, 2, 0x999999, null);			//this.createEmptySprite("labs", this.getNextHighestDepth());			//this.labs.visible = false;			labs = new ListBox(0, 0, w, h, seleziona, xml, nn, null, null);			/*_root.myClassedMC(classi.comp.button, this.labs, "fondo", {x:point.x, y:point.y, w:800, h:600, fnzTrgt:this, fnz:"chiudi", param:false});			this.labs.fondo.useHandCursor = false;			this.labs.fondo.alpha = 0;			for (var b=0; b<n; b++) {				_root.myClassedMC(classi.comp.button, this.labs, "lab"+b, {x:0, y:b*h, w:w, h:h, txt:" ", fnzTrgt:this, fnz:"seleziona", param:b});			}			_root.myClassedMC(classi.comp.button, this.labs, "up", {x:0, y:1-h, w:w, h:h, fnzTrgt:this, fnzOver:"avvia_scrolla", fnzOut:"avvia_scrolla", param:-1});			_root.myClassedMC(classi.comp.button, this.labs, "down", {x:0, y:h*n, w:w, h:h, fnzTrgt:this, fnzOver:"avvia_scrolla", fnzOut:"avvia_scrolla", param:1});			this.labs.up.alpha = 0;			this.labs.down.alpha = 0;			this.avvia(myXml);*/		}		function avvia(myXml) {			this.conta = 0;			this.myXml = myXml;			this.riempi();		}		public function apri(t) {			if (!toppa) {				point = new Point(0,0);				point = this.localToGlobal(point);				toppa = new Rett(-point.x, -point.y, 800, 600, 0xFFFFFF, null, 0)				toppa.addEventListener(MouseEvent.MOUSE_DOWN, chiudi);			}			this.addChild(toppa)			this.addChild(labs)			this.parent.swapChildren(this, this.parent.getChildAt(this.parent.numChildren-1))			/*this.labs.visible = true;			//Mouse.removeListener(_root.mykeyboard.MML);			this.riempi();*/		}		function chiudi(b) {			this.removeChild(toppa)			this.removeChild(labs)			//Mouse.addListener(_root.mykeyboard.MML);		}		function seleziona(b) {			this.removeChild(toppa)			this.removeChild(labs)			lab.lab.text = b			fnz(b)			//Mouse.addListener(_root.mykeyboard.MML);		}	}}