package classi.core {	import flash.display.Sprite;	import flash.display.Bitmap;	import flash.display.BitmapData;	import flash.utils.setInterval;	import flash.utils.clearInterval;		//import FlxerGallery.main.BitmapDataToBinaryPNG	//import FlxerGallery.main.ByteArrayUploader	public class ThumbSaver extends Sprite {		var w		var h		var c		var bd:BitmapData;		var bm:Bitmap;		var shot:Sprite;		var ok:Sprite;		var no:Sprite;		// ThumbSaver param		var targetUrl		var trgt;		var fileName;		var JsOk;		//		public function ThumbSaver() {			x = 350;			y = 350;			//this.y = 0;			w = 400;			h = 300;		}		public function avvia() {			bd = new BitmapData(w,h,false,0xFF00FF);			bm = new Bitmap(bd);			this.addChild(bm);			bm.visible = false;			shot = new Button();			shot.avvia({fnz:scattaThumb,txt:"MAKE THUMB",alt:"bella"});			shot.scaleX = shot.scaleY = 2;			shot.x = int(w-shot.width)/2			shot.y = int(h/2)-10			this.addChild(shot);			ok = new Button();			ok.avvia({fnz:saveThumb,txt:"SAVE THUMB",alt:"Preferences.pref.saveShot"});			ok.scaleX = ok.scaleY = 2;			no = new Button();			no.avvia({fnz:cancelThumb,txt:"CANCEL",alt:"Preferences.pref.delShot"});			no.scaleX = no.scaleY = 2;			ok.x = int((w-ok.width-20-no.width)/2)			ok.y = int(h/2)-10			no.x = int(ok.width+ok.x+20)			no.y = int(h/2)-10		}		function scattaThumb(t) {			this.removeChild(shot);			bd.draw(this.parent.webcam);			this.bm.visible = true;			trace("scattaThumbTooll")			this.addChild(ok);			this.addChild(no);		}		function lampeggia() {			ok.visible = !ok.visible;		}		function saveThumb(t) {			no.disable();			ok.disable();			c = setInterval(lampeggia, 500);			//var ba = BitmapDataToBinaryPNG.getPNG(bd);			//var myUploader = new ByteArrayUploader();			//			//var tmp = this.parent.mySuperPlayer.currMov;			//fileName = tmp.substring(tmp.lastIndexOf("/")+1, tmp.length-3)+"png";			//			//myUploader.setParameters({_listener:this, _fileDataFieldName:"myfile", _fileName:fileName, _targetUrl:targetUrl,_usePOST:true});			//myUploader.sendBinary(ba);		}		function cancelThumb(t) {			this.removeChild(ok);			this.removeChild(no);			this.addChild(shot);			this.bm.visible = false;		}/*		public function securityErrorHandler(obj) {			trace("securityErrorHandler");		}		public function onByteArrayUploader_open(a,b) {			trace("onByteArrayUploader_open");		}		public function onByteArrayUploader_progress(a,b) {			trace("onByteArrayUploader_progress");		}		public function onByteArrayUploader_httpStatus(a,b) {			trace("onByteArrayUploader_httpStatus");					}		public function onByteArrayUploader_complete(a,b) {			trace("onByteArrayUploader_complete");						//navigateToURL(new URLRequest(path),"_self");		}		public function onByteArrayUploader_allEvents(a,b) {						trace("onByteArrayUploader_allEvents");		}		public function onByteArrayUploader_failure() {			//questo viene eseguito			trace("onByteArrayUploader_failure");		}		public function onByteArrayUploader_ioError(a,b) {			trace("onByteArrayUploader_ioError");		}		public function onByteArrayUploader_success() {			trace("onByteArrayUploader_success");			clearInterval(c)			navigateToURL(new URLRequest(JsOk),"_self");		}*/	}}