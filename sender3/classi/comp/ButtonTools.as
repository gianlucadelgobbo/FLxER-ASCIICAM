package classi.comp {	import flash.display.MovieClip;	import flash.geom.ColorTransform;	import flash.events.MouseEvent;	public class ButtonTools extends MovieClip {		var txt:String;		var fnz:Function;		var fnzOut:Function;		var param;		///////		public var lab;		public var simb;		public var puls:MovieClip;		public var pulsInt:MovieClip;		var deltaT		var trgt;		var alt;		//		public function ButtonTools() {		}		public function avvia(obj) {			if (obj.txt != undefined) {				/* STANDARD 				var deltaT =  4*/				/* NGA FONT */				this.lab.text = obj.txt;				deltaT = 5;				this.lab.width = int(this.lab.textWidth+deltaT);				this.puls.width = int(this.lab.width);				this.pulsInt.width = int(this.puls.width-2);			}			fnz = obj.fnz;			param = obj.param;			alt = obj.alt;			if (obj.fnzOut != undefined) {				fnzOut = obj.fnzOut;							}			if (obj.isSimb == true) {				trgt = this.simb;			} else {				trgt = this.puls;			}			enable();		}		public function enable() {			this.mouseChildren = false;			if (fnzOut != null) {				this.addEventListener(MouseEvent.MOUSE_UP,mouseUpHandler);			}			this.addEventListener(MouseEvent.MOUSE_DOWN,mouseDownHandler);			this.addEventListener(MouseEvent.MOUSE_OVER,mouseOverHandler);			this.addEventListener(MouseEvent.MOUSE_OUT,mouseOutHandler);			this.buttonMode=true;		}		public function disable() {			if (fnzOut != null) {				this.removeEventListener(MouseEvent.MOUSE_UP,mouseUpHandler);			}			this.removeEventListener(MouseEvent.MOUSE_DOWN,mouseDownHandler);			this.removeEventListener(MouseEvent.MOUSE_OVER,mouseOverHandler);			this.removeEventListener(MouseEvent.MOUSE_OUT,mouseOutHandler);			this.buttonMode=false;		}		function mouseDownHandler(e) {			fnz(param);			mouseOutHandler(e);		};		function mouseUpHandler(e) {			trace("mouseUpHandler")			fnzOut(this);			mouseOutHandler(e);		};		function mouseOverHandler(e) {			var myCol:ColorTransform = trgt.transform.colorTransform;			myCol.color = 0xFF0000;			trgt.transform.colorTransform = myCol;			if (alt) {//				Preferences.pref.myAlt.avvia(alt);			}		};		function mouseOutHandler(e) {			var myCol:ColorTransform = trgt.transform.colorTransform;			myCol.color = 0xFF00FF;			trgt.transform.colorTransform = myCol;			//Preferences.pref.myAlt.stoppa();		};	}}